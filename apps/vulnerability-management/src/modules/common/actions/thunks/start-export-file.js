import { BRANCH_NAME, STEM_NAME } from 'tio-vm/modules/common/constants';
import { STEM_NAME as VULN_STEM_NAME } from 'tio-vm/modules/vulnerabilities/constants';
import { getFilterParams } from 'tio-vm/modules/common/utils/adv-search';
import { Rest, Utils } from 'tio-alloy';

import {
    fetchExportFileId,
    fetchExportFileStatus
} from '../';

const POLLING_INTERVAL = 2500;
const EXPORT_FILE_READY = 'ready';

export const startExportFile = (fileDetails = {}) => {
    return (dispatch, getState) => {
        const { filtersApplied } = getState()[BRANCH_NAME][VULN_STEM_NAME];
        const { filterRange } = getState()[BRANCH_NAME][STEM_NAME];

        (async () => {
            // Get export file id
            await dispatch(fetchExportFileId(fileDetails, filterRange, getFilterParams(filtersApplied)));
            const { exportFile: { fileId } } = getState()[BRANCH_NAME][STEM_NAME];

            if (fileId.toString().length > 0) {
                // Wait on fileId to be in status 'ready' by polling at 2 sec intervals
                const polling = setInterval(async () => {
                    await dispatch(fetchExportFileStatus(fileId));
                    const { exportFile: exportFileData } = getState()[BRANCH_NAME][STEM_NAME];
                    const { fileStatus } = exportFileData;

                    if (fileStatus === EXPORT_FILE_READY) {
                        // download export file when file is ready
                        clearInterval(polling);
                        // Add 'api' prefix if needed
                        const token = Utils.storage.get('Iron.token');
                        const url = Rest.prependUrl(`/workbenches/export/${fileId}/download?token=${token}`);

                        window.location = `${window.location.origin}${url}`;
                    }
                }, POLLING_INTERVAL);
            }
        })();
    };
};
