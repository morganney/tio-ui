import React from 'react';
import PropTypes from 'prop-types';
import {
    VulnerabilitiesIcon,
    VulnLowIcon, VulnLowAcceptedIcon, VulnLowRecastIcon,
    VulnMediumIcon, VulnMediumAcceptedIcon, VulnMediumRecastIcon,
    VulnHighIcon, VulnHighAcceptedIcon, VulnHighRecastIcon,
    VulnCriticalIcon, VulnCriticalAcceptedIcon, VulnCriticalRecastIcon
} from '@hivekit/icon';

import { SEVERITY_COLORS, SEVERITY_LABELS } from 'tio-vm/modules/common/constants';

const SEVERITY_ACCEPT = 'accepted';
const SEVERITY_RECAST = 'recasted';
// TODO intl
const modificationNames = {
    [SEVERITY_ACCEPT]: 'Accepted',
    [SEVERITY_RECAST]: 'Recasted'
};

const severityIcons = [
    // TODO redundancy here, we need info icons for these
    [VulnerabilitiesIcon, VulnerabilitiesIcon, VulnerabilitiesIcon],
    [VulnLowIcon, VulnLowAcceptedIcon, VulnLowRecastIcon],
    [VulnMediumIcon, VulnMediumAcceptedIcon, VulnMediumRecastIcon],
    [VulnHighIcon, VulnHighAcceptedIcon, VulnHighRecastIcon],
    [VulnCriticalIcon, VulnCriticalAcceptedIcon, VulnCriticalRecastIcon]
];

const SeverityIcon = ({ severity, recastedSeverity, size = 0, modification }) => {
    const sev = recastedSeverity || severity || 0;
    const mod = modification ? ` - ${modificationNames[modification]}` : '';
    const iconSet = severityIcons[sev];

    let iconIndex = 0;

    if (modification) {
        iconIndex = (modification === SEVERITY_ACCEPT ? 1 : iconSet.length - 1);
    }

    const Icon = iconSet[iconIndex];

    return (
        <Icon
            size={size}
            color={sev === 0 ? SEVERITY_COLORS[sev] : null}
            data-tip={`Severity ${SEVERITY_LABELS[sev]}${mod}`} />
    );
};
SeverityIcon.propTypes = {
    size: PropTypes.number,
    severity: PropTypes.number,
    recastedSeverity: PropTypes.number,
    modification: PropTypes.oneOf([SEVERITY_ACCEPT, SEVERITY_RECAST])
};

const CellSeverityIcon = (props) => {
    const { data } = props;

    return (
        <SeverityIcon {...data} {...props} />
    );
};
CellSeverityIcon.propTypes = {
    data: PropTypes.object.isRequired
};

export {
    SeverityIcon,
    CellSeverityIcon
};
