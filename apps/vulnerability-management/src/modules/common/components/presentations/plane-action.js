import React from 'react';
import PropTypes from 'prop-types';
import { Plane } from '@hivekit/plane';

import { PLANE_HIDDEN, PLANE_PREVIEW } from 'tio-vm/constants';
import {
    PLANE_ACTION_EXPORT,
    PLANE_ACTION_RECAST,
    PLANE_ACTION_SCAN,
    PLANE_ACTION_SHARE_SEARCH,
    PLANE_ACTION_TAG
} from 'tio-vm/modules/common/constants';
import { ExportFormComponent } from 'tio-vm/modules/common/components';

import { ShareSearchFormView } from './share-search-form';

export class PlaneActionView extends React.Component {
    static propTypes = {
        planeAction: PropTypes.object.isRequired,
        updatePlaneAction: PropTypes.func.isRequired
    };

    constructor () {
        super();
        this.renderPreview = this.renderPreview.bind(this);
        this.onPlaneClose = this.onPlaneClose.bind(this);
    }

    onPlaneClose () {
        this.props.updatePlaneAction({ display: false, type: null });
    }

    renderPreview () {
        const { planeAction } = this.props;

        switch (planeAction.type) {
            case PLANE_ACTION_EXPORT:
                return <ExportFormComponent {...planeAction.params} />;
            case PLANE_ACTION_RECAST:
            case PLANE_ACTION_SCAN:
            case PLANE_ACTION_SHARE_SEARCH:
                return <ShareSearchFormView />;
            case PLANE_ACTION_TAG:
            default:
                return null;
        }
    }

    render () {
        const { planeAction } = this.props;

        return (
            <Plane display={planeAction.display ? PLANE_PREVIEW : PLANE_HIDDEN}
                preview={this.renderPreview}
                closePlane={this.onPlaneClose} />
        );
    }
}
