const getVulnRecastedSeverity = (vuln) => {
    const { severity, count, counts_by_severity: countsBySeverity } = vuln;
    let recastedSeverity = severity;

    // If all instances of a particular plugin have been Recasted display the Recasted severity instead of the original severity
    if (countsBySeverity.length === 1 && count === countsBySeverity[0].count) {
        recastedSeverity = countsBySeverity[0].value;
    // If the instances have been Recast to multiple different severities, then display the highest severity
    } else if (countsBySeverity.length > 1) {
        const severities = countsBySeverity.map((sevCount) => {
            return sevCount.value;
        });

        recastedSeverity = Math.max(...severities);
    }

    return { ...vuln, recastedSeverity };
};

const vulnsPreprocessor = (response) => {
    return {
        ...response,
        vulnerabilities: response.vulnerabilities.map(getVulnRecastedSeverity)
    };
};

export {
    vulnsPreprocessor
};
