/* Flatten the plugin outputs response structure for table display
outputs[]
    plugin_output
    states[]
        state
            results[]
                assets[]
                    uuid
                    hostname
                application_protocol
                port
                severity
                transport_protocol
*/

const getVulnInstances = (data) => {
    const instances = [];

    for (let h = data.outputs.length; h--;) {
        const output = data.outputs[h];
        const { plugin_output: pluginOutput } = output;

        for (let i = output.states.length; i--;) {
            const currentState = output.states[i];
            const { name: state } = currentState;

            for (let j = currentState.results.length; j--;) {
                const result = currentState.results[j];
                const {
                    application_protocol: applicationProtocol,
                    port,
                    severity,
                    modification,
                    transport_protocol: transportProtocol
                } = result;

                for (let k = result.assets.length; k--;) {
                    const { uuid, hostname, attachments } = result.assets[k];

                    instances.push({
                        state,
                        pluginOutput,
                        applicationProtocol,
                        port,
                        severity,
                        modification,
                        transportProtocol,
                        uuid,
                        hostname,
                        attachments
                    });
                }
            }
        }
    }

    return { outputs: instances };
};

const vulnInstancesArrayPreprocessor = (response) => {
    return response.map(getVulnInstances);
};

export {
    getVulnInstances,
    vulnInstancesArrayPreprocessor
};
