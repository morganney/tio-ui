import React from 'react';
import PropTypes from 'prop-types';

import {
    AdvSearchView,
    LayoutSearchTableView
} from 'tio-vm/modules/common/components/presentations';
import {
    VulnAssetsContainer,
    SearchFiltersContainer
} from 'tio-vm/modules/vulnerabilities/components/containers';
import {
    VulnAssetsTableView
} from 'tio-vm/modules/vulnerabilities/components/presentations';

export class VulnAssetsComponent extends React.Component {
    static propTypes = {
        match: PropTypes.object.isRequired,
        history: PropTypes.object.isRequired
    };

    constructor () {
        super();
        this.renderVulnAssets = this.renderVulnAssets.bind(this);
        this.onTableClick = this.onTableClick.bind(this);
        this.renderAdvancedSearch = this.renderAdvancedSearch.bind(this);
    }

    onTableClick (node) {
        const { match, history } = this.props;

        history.push(`${match.url}/${node.data.id}`);
    }

    renderAdvancedSearch ({
        fetchVulnAssets,
        fetchVulnAssetsStats,
        vulnAssetsTotal,
        filterRange,
        ...filterProps
    }) {
        // TODO intl - Assets
        const searchVulnAssets = (filters) => {
            fetchVulnAssets(filterRange, filters);
            fetchVulnAssetsStats(filterRange, filters);
        };

        return (
            <AdvSearchView
                {...filterProps}
                filtersApplied={{}}
                defaultField='host.target'
                recordCount={vulnAssetsTotal.toString()}
                recordLabel='Assets'
                searchAction={searchVulnAssets} />
        );
    }

    renderVulnAssets (vulnAssetsProps) {
        return (
            <LayoutSearchTableView
                search={
                    <SearchFiltersContainer
                        {...vulnAssetsProps}
                        filterType='vulnerabilities'
                        tioRender={this.renderAdvancedSearch} />
                }
                table={
                    <VulnAssetsTableView
                        {...vulnAssetsProps}
                        onCellClicked={this.onTableClick} />
                } />
        );
    }

    render () {
        return <VulnAssetsContainer tioRender={this.renderVulnAssets} />;
    }
}
