import React from 'react';
import PropTypes from 'prop-types';
import { withRouter } from 'react-router-dom';
import { Link } from '@hivekit/link';
import { fontSizes } from '@hivekit/core';
import { Table, Cell } from '@hivekit/table';

import { CellSeverityIcon, CellVulnStateIcon } from 'tio-vm/modules/common/components/presentations';

import { PluginTableActionsView } from './plugin-actions';

const AssetLink = ({ match, node }) => {
    return (
        <Cell>
            <Link
                to={`${match.url}/asset/${node.data.uuid}`}
                size={1}
                style={{ textDecoration: 'underline' }} >
                {node.data.hostname}
            </Link>
        </Cell>
    );
};
AssetLink.propTypes = {
    match: PropTypes.object.isRequired,
    node: PropTypes.object.isRequired
};
const AssetLinkView = withRouter(AssetLink);

const PluginInstanceTableActions = ({ match, ...actionProps }) => {
    const tableActionProps = {
        ...actionProps,
        data: { pluginId: match.params.pluginid }
    };

    return (
        <PluginTableActionsView {...tableActionProps} />
    );
};
PluginInstanceTableActions.propTypes = {
    match: PropTypes.object.isRequired
};
const PluginInstanceTableActionsView = withRouter(PluginInstanceTableActions);

// TODO intl - column names
const checkboxColumn = {
    field: 'recastedSeverity',
    sort: 'desc'
};
const columns = [
    {
        headerName: 'Asset',
        customCellRenderer: AssetLinkView
    },
    {
        headerName: 'port/protocol',
        field: 'port&transportProtocol&applicationProtocol',
        width: 100,
        valueGetter: (params) => {
            return `${params.data.port}/${params.data.transportProtocol}/${params.data.applicationProtocol}`;
        }
    },
    {
        headerName: 'state',
        field: 'state',
        width: 36,
        tooltipField: 'state',
        cellStyle: {
            textAlign: 'center',
            lineHeight: fontSizes[5]
        },
        customCellRenderer: CellVulnStateIcon
    },
    {
        headerName: '',
        field: 'actions',
        width: 50,
        suppressSorting: true,
        customCellRenderer: PluginInstanceTableActionsView
    }
];

export const PluginInstancesTableView = ({ pluginInstances, pluginInstancesFetching, ...restProps }) => {
    return (
        <Table
            inheritHeight
            densityToggle={false}
            columns={columns}
            rows={pluginInstances}
            checkboxIconComponent={CellSeverityIcon}
            checkboxProps={checkboxColumn}
            fetching={pluginInstancesFetching}
            {...restProps} />
    );
};
PluginInstancesTableView.propTypes = {
    pluginInstances: PropTypes.array.isRequired,
    pluginInstancesFetching: PropTypes.bool.isRequired
};
