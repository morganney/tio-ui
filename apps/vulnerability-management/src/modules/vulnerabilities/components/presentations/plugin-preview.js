import React from 'react';
import PropTypes from 'prop-types';
import {
    PlanePreviewActionBar,
    PlanePreviewHeader,
    PlanePreviewHeaderView,
    PlanePreviewItem
} from '@hivekit/plane';
import { ContentBox } from '@hivekit/content-box';
import { Text } from '@hivekit/text';

import { SeverityIcon } from 'tio-vm/modules/common/components/presentations';
import {
    PluginAttributesView,
    PluginSolutionView,
    PluginActionsView
} from 'tio-vm/modules/vulnerabilities/components/presentations';

// TODO intl - plugin id
export const PluginPreviewView = ({ pluginId, pluginInfo, pluginInfoRiskExposure, onShowDetails }) => {
    const pluginName = pluginInfo.plugin_details
        ? pluginInfo.plugin_details.name
        : '';

    return (
        <React.Fragment>
            <PlanePreviewItem>
                <PlanePreviewHeader
                    iconComponent={<SeverityIcon severity={pluginInfo.severity} />}
                    contentComponent={<PlanePreviewHeaderView title={pluginName}/>} />
                <Text size={1}>PLUGIN ID: {pluginId}</Text>
                <ContentBox expandable size={0}>
                    {pluginInfo.description}
                </ContentBox>
            </PlanePreviewItem>
            <PlanePreviewActionBar
                actions={<PluginActionsView data={{ pluginInfo, pluginId }} id={`${pluginInfo.plugin_id}_info`} />} />
            <PluginAttributesView {...pluginInfo} pluginInfoRiskExposure={pluginInfoRiskExposure}
                showDetailsEvent={onShowDetails}/>
            <PluginSolutionView {...pluginInfo} />
        </React.Fragment>
    );
};
PluginPreviewView.propTypes = {
    pluginId: PropTypes.string,
    pluginInfo: PropTypes.object.isRequired,
    pluginInfoRiskExposure: PropTypes.array.isRequired,
    onShowDetails: PropTypes.func.isRequired
};
