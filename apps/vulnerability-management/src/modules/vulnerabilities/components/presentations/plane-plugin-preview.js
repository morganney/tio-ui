import React from 'react';
import PropTypes from 'prop-types';
import { Plane } from '@hivekit/plane';
import { Route, Switch } from 'react-router-dom';

import {
    PLANE_FULL,
    PLANE_COVER,
    PLANE_PREVIEW,
    ROUTE_DETAIL,
    ROUTE_VULN_PREVIEW
} from 'tio-vm/constants';
import {
    PluginDetailsComponent,
    PluginPreviewComponent
} from 'tio-vm/modules/vulnerabilities/components';
import {
    PlaneAssetPreviewView
} from 'tio-vm/modules/assets/components/presentations';
import {
    PlanePluginInstanceView
} from 'tio-vm/modules/vulnerabilities/components/presentations';
import { routeClose } from 'tio-vm/modules/common/utils';

export class PlanePluginPreviewView extends React.Component {
    static propTypes = {
        match: PropTypes.object.isRequired,
        history: PropTypes.object.isRequired
    }

    constructor (props) {
        super(props);

        this.onPlaneChange = this.onPlaneChange.bind(this);
        this.onPlaneClose = this.onPlaneClose.bind(this);
        this.renderPreview = this.renderPreview.bind(this);
        this.renderDetails = this.renderDetails.bind(this);
        this.showDetails = this.showDetails.bind(this);
    }

    onPlaneClose () {
        const { match } = this.props;

        routeClose(
            ROUTE_VULN_PREVIEW,
            this.props,
            match.url.match(ROUTE_VULN_PREVIEW)[0].length - 1
        );
    }

    onPlaneChange (planeState) {
        const { match, history } = this.props;
        // temporary double clauses, this is called twice on click
        if ((planeState === PLANE_FULL || planeState === PLANE_COVER) && !match.params.detail) {
            history.push(`${match.url}/${ROUTE_DETAIL}`);
        }

        if (planeState === PLANE_PREVIEW && match.params.detail) {
            // probably a better way to do this
            const indexOfDetail = match.url.indexOf(`/${ROUTE_DETAIL}`);
            history.replace(`${match.url.substr(0, indexOfDetail)}`);
        }
    }

    renderPreview () {
        const { pluginid } = this.props.match.params;

        return <PluginPreviewComponent pluginId={pluginid} onShowDetails={this.showDetails} />;
    }

    renderDetails () {
        const { pluginid, detail } = this.props.match.params;

        return detail === ROUTE_DETAIL
            ? <PluginDetailsComponent pluginId={pluginid} />
            : null;
    }

    showDetails () {
        const { match, history } = this.props;

        if (!match.params.detail) {
            history.push(`${match.url}/${ROUTE_DETAIL}`);
        }
    }

    render () {
        const { match } = this.props;

        return (
            <Plane
                display={match.params.detail !== ROUTE_DETAIL ? PLANE_PREVIEW : PLANE_FULL}
                closePlane={this.onPlaneClose}
                onChange={this.onPlaneChange}
                preview={this.renderPreview}
                detail={this.renderDetails}>
                <Switch>
                    <Route path={`${match.path}/instance/:instanceid`} component={PlanePluginInstanceView} />
                    <Route path={`${match.path}/asset/:assetid`} component={PlaneAssetPreviewView} />
                </Switch>
            </Plane>
        );
    }
}
