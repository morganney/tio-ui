import React from 'react';
import PropTypes from 'prop-types';
import { Plane } from '@hivekit/plane';

import {
    PluginInstanceComponent
} from 'tio-vm/modules/vulnerabilities/components';
import { PLANE_PREVIEW, ROUTE_VULN_PREVIEW_INSTANCE } from 'tio-vm/constants';
import { routeClose } from 'tio-vm/modules/common/utils';

export class PlanePluginInstanceView extends React.Component {
    static propTypes = {
        history: PropTypes.object.isRequired,
        match: PropTypes.object.isRequired
    }

    constructor (props) {
        super(props);
        this.onPlaneClose = this.onPlaneClose.bind(this);
        this.renderPreview = this.renderPreview.bind(this);
    }

    onPlaneClose () {
        const { match } = this.props;

        routeClose(
            ROUTE_VULN_PREVIEW_INSTANCE,
            this.props,
            match.url.match(ROUTE_VULN_PREVIEW_INSTANCE)[0].length
        );
    }

    renderPreview () {
        const { pluginid, instanceid } = this.props.match.params;

        return <PluginInstanceComponent pluginId={pluginid} instanceId={instanceid} />;
    }

    render () {
        return (
            <Plane
                display={PLANE_PREVIEW}
                closePlane={this.onPlaneClose}
                preview={this.renderPreview} />
        );
    }
}
