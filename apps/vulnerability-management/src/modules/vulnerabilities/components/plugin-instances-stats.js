import React from 'react';
import PropTypes from 'prop-types';

import { GraphBarView } from 'tio-vm/modules/common/components/presentations';
import { PluginInstancesStatsContainer } from 'tio-vm/modules/vulnerabilities/components/containers';
import { messages } from 'tio-vm/modules/vulnerabilities/messages';

const getStats = (stats, data, total) => {
    return stats.map((stat, index) => {
        const value = typeof data[index] === 'undefined' ? 0 : data[index];

        return { ...stat, value, total };
    });
};

const renderPluginInstancesStats = (pluginInstancesProps) => {
    const { intl, pluginInstancesStats, pluginInstancesTotal } = pluginInstancesProps;
    const { ageGreaterThan90Days, age61To90Days, age31To60Days, age15To30Days, age0To14Days } = messages;
    const stats = [
        { label: intl.formatMessage(ageGreaterThan90Days) },
        { label: intl.formatMessage(age61To90Days) },
        { label: intl.formatMessage(age31To60Days) },
        { label: intl.formatMessage(age15To30Days) },
        { label: intl.formatMessage(age0To14Days) }
    ];

    return <GraphBarView graphs={getStats(stats, pluginInstancesStats, pluginInstancesTotal)} mt={3} version='light' />;
};

export const PluginInstancesStatsComponent = ({ pluginId }) => {
    return <PluginInstancesStatsContainer pluginId={pluginId} tioRender={renderPluginInstancesStats} />;
};
PluginInstancesStatsComponent.propTypes = {
    pluginId: PropTypes.string.isRequired
};
