import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';

import { STEM_NAME as COMMON_STEM_NAME } from 'tio-vm/modules/common/constants';
import { BRANCH_NAME, STEM_NAME } from 'tio-vm/modules/assets/constants';
import { fetchAssetExploitability, fetchAssetInfo } from 'tio-vm/modules/assets/actions';
// import { getFilterParams } from 'tio-vm/modules/common/utils/adv-search';

class AssetInfo extends React.Component {
    static propTypes = {
        // props
        assetId: PropTypes.string.isRequired,
        isOverview: PropTypes.bool,
        // store
        assetExploitability: PropTypes.number.isRequired,
        assetInfo: PropTypes.object.isRequired,
        assetInfoFetching: PropTypes.bool.isRequired,
        filterRange: PropTypes.number.isRequired,
        // filtersApplied: PropTypes.object,
        // functions
        fetchAssetExploitability: PropTypes.func.isRequired,
        fetchAssetInfo: PropTypes.func.isRequired,
        tioRender: PropTypes.func.isRequired
    };

    componentDidMount () {
        this.update();
    }

    componentDidUpdate (prevProps) {
        if (prevProps.assetId !== this.props.assetId) {
            this.update();
        }
    }

    update () {
        const { assetId, filterRange, isOverview } = this.props;
        // , filtersApplied

        this.props.fetchAssetInfo(
            assetId,
            filterRange
            // ,getFilterParams(filtersApplied)
        );

        if (!isOverview) {
            this.props.fetchAssetExploitability(
                assetId,
                filterRange
            );
        }
    }

    render () {
        return this.props.tioRender(this.props);
    }
}

const mapStateToProps = (state) => {
    const { filterRange } = state[BRANCH_NAME][COMMON_STEM_NAME];
    const {
        assetExploitability,
        assetInfo,
        assetInfoFetching
        // , filtersApplied
    } = state[BRANCH_NAME][STEM_NAME];

    return {
        assetExploitability,
        assetInfo,
        assetInfoFetching,
        filterRange
        // ,filtersApplied
    };
};
const mapDispatchToProps = {
    fetchAssetInfo,
    fetchAssetExploitability
};

export const AssetInfoContainer = connect(mapStateToProps, mapDispatchToProps)(AssetInfo);
