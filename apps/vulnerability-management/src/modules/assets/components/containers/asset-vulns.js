import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';

import { STEM_NAME as COMMON_STEM_NAME } from 'tio-vm/modules/common/constants';
import { BRANCH_NAME, STEM_NAME } from 'tio-vm/modules/assets/constants';
import { fetchAssetVulns } from 'tio-vm/modules/assets/actions';
import { getFilterParams } from 'tio-vm/modules/common/utils/adv-search';

class AssetVulns extends React.Component {
    static propTypes = {
        // props
        assetId: PropTypes.string.isRequired,
        // store
        assetVulns: PropTypes.array.isRequired,
        assetVulnsTotal: PropTypes.number.isRequired,
        assetVulnsFetching: PropTypes.bool.isRequired,
        filterRange: PropTypes.number.isRequired,
        filtersApplied: PropTypes.object,
        // functions
        fetchAssetVulns: PropTypes.func.isRequired,
        tioRender: PropTypes.func.isRequired
    };

    componentDidMount () {
        this.update();
    }

    componentDidUpdate (prevProps) {
        if (prevProps.assetId !== this.props.assetId ||
            prevProps.filterRange !== this.props.filterRange) {
            this.update();
        }
    }

    update () {
        this.props.fetchAssetVulns(
            this.props.assetId,
            this.props.filterRange,
            getFilterParams(this.props.filtersApplied)
        );
    }

    render () {
        return this.props.tioRender(this.props);
    }
}

const mapStateToProps = (state) => {
    const { filterRange } = state[BRANCH_NAME][COMMON_STEM_NAME];
    const {
        assetVulns,
        assetVulnsFetching,
        filtersApplied
    } = state[BRANCH_NAME][STEM_NAME];

    return {
        assetVulnsFetching,
        assetVulns: assetVulns.vulnerabilities,
        assetVulnsTotal: assetVulns.total_vulnerability_count,
        filterRange,
        filtersApplied
    };
};
const mapDispatchToProps = {
    fetchAssetVulns
};

export const AssetVulnsContainer = connect(mapStateToProps, mapDispatchToProps)(AssetVulns);
