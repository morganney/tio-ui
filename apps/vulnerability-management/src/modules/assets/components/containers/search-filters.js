import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';

import { BRANCH_NAME, STEM_NAME } from 'tio-vm/modules/assets/constants';
import { fetchFilters, updateFiltersApplied } from 'tio-vm/modules/assets/actions';

class SearchFilters extends React.Component {
    static propTypes = {
        filterType: PropTypes.oneOf(['assets', 'vulnerabilities']).isRequired,
        filters: PropTypes.array.isRequired,
        filtersApplied: PropTypes.object.isRequired,
        filtersFetching: PropTypes.bool.isRequired,
        updateFiltersApplied: PropTypes.func.isRequired,
        // internal
        fetchFilters: PropTypes.func.isRequired,
        tioRender: PropTypes.func.isRequired
    };

    componentDidMount () {
        this.props.fetchFilters(this.props.filterType);
    }

    render () {
        return this.props.tioRender(this.props);
    }
}

const mapStateToProps = (state) => {
    const {
        filters,
        filtersApplied,
        filtersFetching
    } = state[BRANCH_NAME][STEM_NAME];

    return {
        filters,
        filtersApplied,
        filtersFetching
    };
};
const mapDispatchToProps = {
    fetchFilters,
    updateFiltersApplied
};

export const SearchFiltersContainer = connect(mapStateToProps, mapDispatchToProps)(SearchFilters);
