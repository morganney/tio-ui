import React from 'react';
import PropTypes from 'prop-types';
import {
    SourceCIcon,
    SourceNIcon,
    SourceWIcon,
    PlaceholderIcon
} from '@hivekit/icon';
import { colors } from '@hivekit/core';

import { Utils } from 'tio-alloy';

const { dateFormat } = Utils;

// TODO update remaining icons
// https://jira.corp.tenablesecurity.com/browse/PDX-1270
const sourceIconMap = {
    NESSUS_AGENT: SourceNIcon,
    AWS: PlaceholderIcon,
    LCE: PlaceholderIcon,
    NESSUS_SCAN: SourceNIcon,
    NNM: SourceNIcon,
    PVS: SourceNIcon,
    QUALYS: PlaceholderIcon,
    WAS: SourceWIcon
};
// TODO intl - First Seen, Last Seen
const SourceIcon = ({ source: { name, first_seen: firstSeen, last_seen: lastSeen }, size }) => {
    const Icon = sourceIconMap[name] || SourceCIcon;
    const tooltip = `${name}<br>First Seen: ${dateFormat(firstSeen)}<br>Last Seen: ${dateFormat(lastSeen)}`;

    return <Icon size={size} data-tip={tooltip} color={colors.grayDarker} />;
};
SourceIcon.propTypes = {
    size: PropTypes.number,
    source: PropTypes.object.isRequired
};

const SourceIconListView = ({ sources, size = 0 }) => {
    return sources.map((source) => {
        return <SourceIcon key={source} source={source} size={size} />;
    });
};
SourceIconListView.propTypes = {
    size: PropTypes.number,
    sources: PropTypes.array.isRequired
};
SourceIconListView.defaultProps = {
    sources: []
};

const CellSourceIcon = (props) => {
    const { data } = props;

    return <SourceIconListView {...data} {...props} />;
};
CellSourceIcon.propTypes = {
    data: PropTypes.object.isRequired
};
CellSourceIcon.defaultProps = {
    data: { sources: [] }
};

export {
    SourceIcon,
    SourceIconListView,
    CellSourceIcon
};
