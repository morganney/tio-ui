import React from 'react';
import PropTypes from 'prop-types';
import { withRouter } from 'react-router-dom';

import {
    AdvSearchView,
    LayoutSearchTableView
} from 'tio-vm/modules/common/components/presentations';
import {
    AssetsContainer,
    SearchFiltersContainer
} from 'tio-vm/modules/assets/components/containers';
import {
    AssetsTableView
} from 'tio-vm/modules/assets/components/presentations';

class Assets extends React.Component {
    static propTypes = {
        match: PropTypes.object.isRequired,
        history: PropTypes.object.isRequired
    };

    constructor () {
        super();
        this.onTableClick = this.onTableClick.bind(this);
        this.renderAssets = this.renderAssets.bind(this);
    }

    onTableClick (node) {
        const { match, history } = this.props;

        history.push(`${match.url}/${node.data.id}`);
    }

    renderAdvancedSearch ({ fetchAssets, ...filterProps }) {
        // TODO intl - Assets
        const { assetsTotal, filterRange } = filterProps;

        return (
            <AdvSearchView
                {...filterProps}
                filtersApplied={{}}
                recordCount={assetsTotal.toString()}
                defaultField='ipv4'
                recordLabel='Assets'
                searchAction={fetchAssets.bind(null, filterRange)} />
        );
    }

    renderAssets (assetProps) {
        return (
            <LayoutSearchTableView
                search={
                    <SearchFiltersContainer
                        {...assetProps}
                        filterType='assets'
                        tioRender={this.renderAdvancedSearch} />
                }
                table={
                    <AssetsTableView
                        {...assetProps}
                        onCellClicked={this.onTableClick} />
                } />
        );
    }

    render () {
        return <AssetsContainer tioRender={this.renderAssets} {...this.props} />;
    }
}

export const AssetsComponent = withRouter(Assets);
